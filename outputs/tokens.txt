VAR var 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
NUMBER 10 1
BRACKET_CLOSE ] 1
VAR var 1
IDENTIFIER i 1
IDENTIFIER i 1
EQUALS = 1
NUMBER 0 1
WHILE while 1
IDENTIFIER i 1
SMALLER_THAN < 1
NUMBER 10 1
PRINT print 1
STRING v[ 1
PRINT print 1
IDENTIFIER i 1
PRINT print 1
STRING ]=? 1
READ read 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
IDENTIFIER i 1
BRACKET_CLOSE ] 1
IDENTIFIER i 1
EQUALS = 1
IDENTIFIER i 1
PLUS + 1
NUMBER 1 1
END end 1
VAR var 1
IDENTIFIER gata 1
IDENTIFIER gata 1
EQUALS = 1
NUMBER 0 1
MINUS - 1
NUMBER 1 1
WHILE while 1
IDENTIFIER gata 1
SMALLER_THAN < 1
NUMBER 0 1
IDENTIFIER gata 1
EQUALS = 1
NUMBER 1 1
IDENTIFIER i 1
EQUALS = 1
NUMBER 0 1
WHILE while 1
IDENTIFIER i 1
SMALLER_THAN < 1
NUMBER 9 1
IF if 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
IDENTIFIER i 1
BRACKET_CLOSE ] 1
GREATER_THAN > 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
IDENTIFIER i 1
PLUS + 1
NUMBER 1 1
BRACKET_CLOSE ] 1
VAR var 1
IDENTIFIER x 1
IDENTIFIER x 1
EQUALS = 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
IDENTIFIER i 1
BRACKET_CLOSE ] 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
IDENTIFIER i 1
BRACKET_CLOSE ] 1
EQUALS = 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
IDENTIFIER i 1
PLUS + 1
NUMBER 1 1
BRACKET_CLOSE ] 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
IDENTIFIER i 1
PLUS + 1
NUMBER 1 1
BRACKET_CLOSE ] 1
EQUALS = 1
IDENTIFIER x 1
IDENTIFIER gata 1
EQUALS = 1
NUMBER 0 1
MINUS - 1
NUMBER 1 1
END end 1
IDENTIFIER i 1
EQUALS = 1
IDENTIFIER i 1
PLUS + 1
NUMBER 1 1
END end 1
END end 1
PRINT print 1
STRING v sortat: \n 1
IDENTIFIER i 1
EQUALS = 1
NUMBER 0 1
WHILE while 1
IDENTIFIER i 1
SMALLER_THAN < 1
NUMBER 9 1
PRINT print 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
IDENTIFIER i 1
BRACKET_CLOSE ] 1
PRINT print 1
STRING , 1
IDENTIFIER i 1
EQUALS = 1
IDENTIFIER i 1
PLUS + 1
NUMBER 1 1
END end 1
PRINT print 1
IDENTIFIER v 1
BRACKET_OPEN [ 1
NUMBER 9 1
BRACKET_CLOSE ] 1
PRINT print 1
STRING . 1
EOF EOF -1
